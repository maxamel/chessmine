name: chessmine
services:
    redis:
        container_name: "redis"
        image: "redis:alpine"
        ports:
          - 6379:6379
    game_server:
        image: ewr.vultrcr.com/chessmine/game_server:curr
        pull_policy: always
        deploy:
          replicas: 4
          endpoint_mode: dnsrr
          resources:
            limits:
              cpus: '0.20'
              memory: 200M
        build:
          context: ../backend/game_server
          dockerfile: Dockerfile
          tags:
            - "game_server:curr"
        volumes:
          - ../backend/game_server/:/usr/app
        depends_on:
          - redis
    caddy:
        container_name: "caddy"
        image: ewr.vultrcr.com/chessmine/frontend:curr
        pull_policy: always
        build:
          context: ../frontend
          dockerfile: Dockerfile
          tags:
            - "frontend:curr"
          args:
            APP_URL: www.chessmine.xyz
            BE_URL: game_server
        ports:
          - 443:443
          - 80:80
        depends_on:
          - game_server
    cadvisor:
        container_name: "cadvisor"
        image: "gcr.io/cadvisor/cadvisor:latest"
        volumes:
          - /var/run/docker.sock:/var/run/docker.sock:ro
          - /sys:/sys:ro
          - /var/snap/docker/common/var-lib-docker:/var/snap/docker/common/var-lib-docker:ro
        privileged: true
        depends_on:
          - caddy
    prometheus:
        container_name: "prometheus"
        image: "prom/prometheus:latest"
        volumes:
          - ./prometheus.yml:/etc/prometheus/prometheus.yml
          - ./targets.json:/etc/prometheus/targets.json
        privileged: true
        depends_on:
          - cadvisor
    grafana:
        container_name: "grafana"
        image: "grafana/grafana:latest"
        ports:
          - 3000:3000
        environment:
          - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
          - DS_PROMETHEUS=prometheus
        volumes:
          - ./datasources.yml:/etc/grafana/provisioning/datasources/datasources.yml
          - ./dashboard.json:/var/lib/grafana/dashboards/dashboard.json
          - ./default.yml:/etc/grafana/provisioning/dashboards/default.yml
        privileged: true
        depends_on:
          - prometheus
